{"ast":null,"code":"import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(_ref => {\n    let [ref, snapshot] = _ref;\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\nfunction useIdleActorRef(logic) {\n  for (var _len = arguments.length, _ref2 = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    _ref2[_key - 1] = arguments[_key];\n  }\n  let [options] = _ref2;\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine) {\n  for (var _len2 = arguments.length, _ref3 = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    _ref3[_key2 - 1] = arguments[_key2];\n  }\n  let [options, observerOrListener] = _ref3;\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector) {\n  let compare = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultCompare;\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider(_ref4) {\n    let {\n      children,\n      logic: providedLogic = actorLogic,\n      machine,\n      options: providedOptions\n    } = _ref4;\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction useActor(logic) {\n  for (var _len3 = arguments.length, _ref5 = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    _ref5[_key3 - 1] = arguments[_key3];\n  }\n  let [options] = _ref5;\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\n/** @alias useActor */\nfunction useMachine(machine) {\n  for (var _len4 = arguments.length, _ref6 = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    _ref6[_key4 - 1] = arguments[_key4];\n  }\n  let [options] = _ref6;\n  return useActor(machine, options);\n}\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };","map":{"version":3,"names":["React","useEffect","useState","useCallback","useIsomorphicLayoutEffect","toObserver","createActor","useSyncExternalStoreWithSelector","useSyncExternalStore","forEachActor","actorRef","callback","children","getSnapshot","Object","values","forEach","child","stopRootWithRehydration","persistedSnapshots","ref","push","observers","Set","systemSnapshot","system","stop","_snapshot","_ref","snapshot","_processingStatus","useIdleActorRef","logic","_len","arguments","length","_ref2","Array","_key","options","currentConfig","setCurrent","config","newActorRef","getPersistedSnapshot","__unsafeAllowInlineActors","implementations","useActorRef","machine","_len2","_ref3","_key2","observerOrListener","sub","subscribe","unsubscribe","start","defaultCompare","a","b","useSelector","actor","selector","compare","undefined","handleStoreChange","boundGetSnapshot","selectedSnapshot","createActorContext","actorLogic","actorOptions","ReactContext","createContext","OriginalProvider","Provider","_ref4","providedLogic","providedOptions","Error","createElement","value","displayName","useContext","useSelector$1","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","i","prototype","hasOwnProperty","call","useActor","_len3","_ref5","_key3","actorSnapshot","send","useMachine","_len4","_ref6","_key4"],"sources":["/Users/evgeniy/react-player/node_modules/@xstate/react/dist/xstate-react.esm.js"],"sourcesContent":["import * as React from 'react';\nimport { useEffect, useState, useCallback } from 'react';\nimport useIsomorphicLayoutEffect from 'use-isomorphic-layout-effect';\nimport { toObserver, createActor } from 'xstate';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\n\nconst forEachActor = (actorRef, callback) => {\n  callback(actorRef);\n  const children = actorRef.getSnapshot().children;\n  if (children) {\n    Object.values(children).forEach(child => {\n      forEachActor(child, callback);\n    });\n  }\n};\nfunction stopRootWithRehydration(actorRef) {\n  // persist snapshot here in a custom way allows us to persist inline actors and to preserve actor references\n  // we do it to avoid setState in useEffect when the effect gets \"reconnected\"\n  // this currently only happens in Strict Effects but it simulates the Offscreen aka Activity API\n  // it also just allows us to end up with a somewhat more predictable behavior for the users\n  const persistedSnapshots = [];\n  forEachActor(actorRef, ref => {\n    persistedSnapshots.push([ref, ref.getSnapshot()]);\n    // muting observers allow us to avoid `useSelector` from being notified about the stopped snapshot\n    // React reconnects its subscribers (from the useSyncExternalStore) on its own\n    // and userland subscibers should basically always do the same anyway\n    // as each subscription should have its own cleanup logic and that should be called each such reconnect\n    ref.observers = new Set();\n  });\n  const systemSnapshot = actorRef.system.getSnapshot?.();\n  actorRef.stop();\n  actorRef.system._snapshot = systemSnapshot;\n  persistedSnapshots.forEach(([ref, snapshot]) => {\n    ref._processingStatus = 0;\n    ref._snapshot = snapshot;\n  });\n}\n\nfunction useIdleActorRef(logic, ...[options]) {\n  let [[currentConfig, actorRef], setCurrent] = useState(() => {\n    const actorRef = createActor(logic, options);\n    return [logic.config, actorRef];\n  });\n  if (logic.config !== currentConfig) {\n    const newActorRef = createActor(logic, {\n      ...options,\n      snapshot: actorRef.getPersistedSnapshot({\n        __unsafeAllowInlineActors: true\n      })\n    });\n    setCurrent([logic.config, newActorRef]);\n    actorRef = newActorRef;\n  }\n\n  // TODO: consider using `useAsapEffect` that would do this in `useInsertionEffect` is that's available\n  useIsomorphicLayoutEffect(() => {\n    actorRef.logic.implementations = logic.implementations;\n  });\n  return actorRef;\n}\nfunction useActorRef(machine, ...[options, observerOrListener]) {\n  const actorRef = useIdleActorRef(machine, options);\n  useEffect(() => {\n    if (!observerOrListener) {\n      return;\n    }\n    let sub = actorRef.subscribe(toObserver(observerOrListener));\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [observerOrListener]);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return actorRef;\n}\n\nfunction defaultCompare(a, b) {\n  return a === b;\n}\nfunction useSelector(actor, selector, compare = defaultCompare) {\n  const subscribe = useCallback(handleStoreChange => {\n    if (!actor) {\n      return () => {};\n    }\n    const {\n      unsubscribe\n    } = actor.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actor]);\n  const boundGetSnapshot = useCallback(() => actor?.getSnapshot(), [actor]);\n  const selectedSnapshot = useSyncExternalStoreWithSelector(subscribe, boundGetSnapshot, boundGetSnapshot, selector, compare);\n  return selectedSnapshot;\n}\n\nfunction createActorContext(actorLogic, actorOptions) {\n  const ReactContext = /*#__PURE__*/React.createContext(null);\n  const OriginalProvider = ReactContext.Provider;\n  function Provider({\n    children,\n    logic: providedLogic = actorLogic,\n    machine,\n    options: providedOptions\n  }) {\n    if (machine) {\n      throw new Error(`The \"machine\" prop has been deprecated. Please use \"logic\" instead.`);\n    }\n    const actor = useActorRef(providedLogic, {\n      ...actorOptions,\n      ...providedOptions\n    });\n    return /*#__PURE__*/React.createElement(OriginalProvider, {\n      value: actor,\n      children\n    });\n  }\n\n  // TODO: add properties to actor ref to make more descriptive\n  Provider.displayName = `ActorProvider`;\n  function useContext() {\n    const actor = React.useContext(ReactContext);\n    if (!actor) {\n      throw new Error(`You used a hook from \"${Provider.displayName}\" but it's not inside a <${Provider.displayName}> component.`);\n    }\n    return actor;\n  }\n  function useSelector$1(selector, compare) {\n    const actor = useContext();\n    return useSelector(actor, selector, compare);\n  }\n  return {\n    Provider: Provider,\n    useActorRef: useContext,\n    useSelector: useSelector$1\n  };\n}\n\n// From https://github.com/reduxjs/react-redux/blob/720f0ba79236cdc3e1115f4ef9a7760a21784b48/src/utils/shallowEqual.ts\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\nfunction shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true;\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n  if (keysA.length !== keysB.length) return false;\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction useActor(logic, ...[options]) {\n  const actorRef = useIdleActorRef(logic, options);\n  const getSnapshot = useCallback(() => {\n    return actorRef.getSnapshot();\n  }, [actorRef]);\n  const subscribe = useCallback(handleStoreChange => {\n    const {\n      unsubscribe\n    } = actorRef.subscribe(handleStoreChange);\n    return unsubscribe;\n  }, [actorRef]);\n  const actorSnapshot = useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n  useEffect(() => {\n    actorRef.start();\n    return () => {\n      stopRootWithRehydration(actorRef);\n    };\n  }, [actorRef]);\n  return [actorSnapshot, actorRef.send, actorRef];\n}\n\n/** @alias useActor */\nfunction useMachine(machine, ...[options]) {\n  return useActor(machine, options);\n}\n\nexport { createActorContext, shallowEqual, useActor, useActorRef, useMachine, useSelector };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}